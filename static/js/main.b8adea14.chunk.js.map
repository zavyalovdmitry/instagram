{"version":3,"sources":["constants/routes.js","context/firebase.js","lib/firebase.js","context/user.js","helpers/protected-route.js","helpers/is-user-logged-in.js","App.js","hooks/use-auth-listener.js","index.js"],"names":["DASHBOARD","LOGIN","SIGN_UP","PROFILE","NOT_FOUND","FirebaseContext","createContext","firebase","Firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","FieldValue","firestore","UserContext","ProtectedRoute","user","children","rest","render","location","to","pathname","ROUTES","state","from","IsUserLoggedIn","loggeInPath","Login","lazy","SignUp","Dashboard","Profile","NotFound","App","useState","JSON","parse","localStorage","getItem","setUser","useContext","useEffect","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem","useAuthListener","Provider","value","fallback","path","component","exact","ReactDOM","document","getElementById"],"mappings":"yGAAA,0KAAO,IAAMA,EAAY,IACZC,EAAQ,SACRC,EAAU,WACVC,EAAU,eACVC,EAAY,c,gCCJzB,WAEMC,EAAkBC,wBAAc,MAEvBD,O,gCCJf,gFAcME,GAdN,YAciBC,IAASC,cATX,CACbC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,+CAIDC,EAAeR,IAASS,UAAxBD,Y,gCCfR,WAEME,EAAcZ,wBAAc,MAEnBY,O,kKCAA,SAASC,EAAT,GAAsD,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,SAAaC,EAAQ,mCAClE,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,YAAmB,IAAhBC,EAAe,EAAfA,SACT,OAAIJ,EACKC,EAGJD,EAWE,KATH,cAAC,IAAD,CACEK,GAAI,CACFC,SAAUC,IACVC,MAAO,CAAEC,KAAML,UCfhB,SAASM,EAAT,GAAmE,IAAzCV,EAAwC,EAAxCA,KAAMW,EAAkC,EAAlCA,YAAaV,EAAqB,EAArBA,SAAaC,EAAQ,iDAC/E,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,YAAmB,IAAhBC,EAAe,EAAfA,SACT,OAAKJ,EAIDA,EAEA,cAAC,IAAD,CACEK,GAAI,CACFC,SAAUK,EACVH,MAAO,CAAEC,KAAML,MAMhB,KAdEH,MCAjB,IAAMW,EAAQC,gBAAK,kBAAM,gCACnBC,EAASD,gBAAK,kBAAM,gCACpBE,EAAYF,gBAAK,kBAAM,6DACvBG,EAAUH,gBAAK,kBAAM,sDACrBI,EAAWJ,gBAAK,kBAAM,gCA4BbK,MA1Bf,WACE,IAAQlB,ECbK,WACb,MAAwBmB,mBAASC,KAAKC,MAAMC,aAAaC,QAAQ,cAAjE,mBAAOvB,EAAP,KAAawB,EAAb,KACQrC,EAAasC,qBAAWxC,KAAxBE,SAgBR,OAdAuC,qBAAU,WACR,IAAMC,EAAWxC,EAASyC,OAAOC,oBAAmB,SAACC,GAC/CA,GACFR,aAAaS,QAAQ,WAAYX,KAAKY,UAAUF,IAChDN,EAAQM,KAERR,aAAaW,WAAW,YACxBT,EAAQ,UAIZ,OAAO,kBAAMG,OACZ,CAACxC,IAEG,CAAEa,QDLQkC,GAATlC,KAER,OACE,cAAC,IAAYmC,SAAb,CAAsBC,MAAO,CAAEpC,QAA/B,SACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUqC,SAAU,2CAApB,SACE,eAAC,IAAD,WACE,cAAC3B,EAAD,CAAgBV,KAAMA,EAAMW,YAAaJ,IAAkB+B,KAAM/B,IAAjE,SACE,cAACK,EAAD,MAEF,cAACF,EAAD,CAAgBV,KAAMA,EAAMW,YAAaJ,IAAkB+B,KAAM/B,IAAjE,SACE,cAACO,EAAD,MAEF,cAAC,IAAD,CAAOwB,KAAM/B,IAAgBgC,UAAWvB,IACxC,cAACjB,EAAD,CAAgBC,KAAMA,EAAMsC,KAAM/B,IAAkBiC,OAAK,EAAzD,SACE,cAACzB,EAAD,MAEF,cAAC,IAAD,CAAOwB,UAAWtB,c,cEzB9BwB,IAAStC,OACP,cAAC,IAAgBgC,SAAjB,CAA0BC,MAAO,CAAEjD,aAAUS,gBAA7C,SACE,cAAC,EAAD,MAEF8C,SAASC,eAAe,W","file":"static/js/main.b8adea14.chunk.js","sourcesContent":["export const DASHBOARD = '/';\r\nexport const LOGIN = '/login';\r\nexport const SIGN_UP = '/sign-up';\r\nexport const PROFILE = '/p/:username';\r\nexport const NOT_FOUND = '/not-found';\r\n","import { createContext } from 'react';\r\n\r\nconst FirebaseContext = createContext(null);\r\n\r\nexport default FirebaseContext;\r\n","import Firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n// import { seedDatabase } from '../seed';\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyDccLnQTJ2C32-s-LrwPPN-VHelGUtqHc8',\r\n  authDomain: 'instagram-z.firebaseapp.com',\r\n  projectId: 'instagram-z',\r\n  storageBucket: 'instagram-z.appspot.com',\r\n  messagingSenderId: '778901965722',\r\n  appId: '1:778901965722:web:1471769f4c1e5c56864823'\r\n};\r\n\r\nconst firebase = Firebase.initializeApp(config);\r\nconst { FieldValue } = Firebase.firestore;\r\n\r\nexport { firebase, FieldValue };\r\n","import { createContext } from 'react';\r\n\r\nconst UserContext = createContext(null);\r\n\r\nexport default UserContext;\r\n","import PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nexport default function ProtectedRoute({ user, children, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) => {\r\n        if (user) {\r\n          return children;\r\n        }\r\n\r\n        if (!user) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: ROUTES.LOGIN,\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        return null;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nProtectedRoute.propTypes = {\r\n  user: PropTypes.object,\r\n  children: PropTypes.object.isRequired\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport default function IsUserLoggedIn({ user, loggeInPath, children, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) => {\r\n        if (!user) {\r\n          return children;\r\n        }\r\n\r\n        if (user) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: loggeInPath,\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        return null;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nIsUserLoggedIn.propTypes = {\r\n  user: PropTypes.object,\r\n  loggeInPath: PropTypes.string.isRequired,\r\n  children: PropTypes.object.isRequired\r\n};\r\n","import React, { lazy, Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport * as ROUTES from './constants/routes';\nimport useAuthListener from './hooks/use-auth-listener';\nimport UserContext from './context/user';\n\nimport ProtectedRoute from './helpers/protected-route';\nimport IsUserLoggedIn from './helpers/is-user-logged-in';\n\nconst Login = lazy(() => import('./pages/login'));\nconst SignUp = lazy(() => import('./pages/sign-up'));\nconst Dashboard = lazy(() => import('./pages/dashboard'));\nconst Profile = lazy(() => import('./pages/profile'));\nconst NotFound = lazy(() => import('./pages/not-found'));\n\nfunction App() {\n  const { user } = useAuthListener();\n\n  return (\n    <UserContext.Provider value={{ user }}>\n      <Router>\n        <Suspense fallback={<p>Loading...</p>}>\n          <Switch>\n            <IsUserLoggedIn user={user} loggeInPath={ROUTES.DASHBOARD} path={ROUTES.LOGIN}>\n              <Login />\n            </IsUserLoggedIn>\n            <IsUserLoggedIn user={user} loggeInPath={ROUTES.DASHBOARD} path={ROUTES.SIGN_UP}>\n              <SignUp />\n            </IsUserLoggedIn>\n            <Route path={ROUTES.PROFILE} component={Profile} />\n            <ProtectedRoute user={user} path={ROUTES.DASHBOARD} exact>\n              <Dashboard />\n            </ProtectedRoute>\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","import { useState, useEffect, useContext } from 'react';\r\nimport FirebaseContext from '../context/firebase';\r\n\r\nexport default function useAuthListener() {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\r\n  const { firebase } = useContext(FirebaseContext);\r\n\r\n  useEffect(() => {\r\n    const listener = firebase.auth().onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        localStorage.setItem('authUser', JSON.stringify(authUser));\r\n        setUser(authUser);\r\n      } else {\r\n        localStorage.removeItem('authUser');\r\n        setUser(null);\r\n      }\r\n    });\r\n\r\n    return () => listener();\r\n  }, [firebase]);\r\n\r\n  return { user };\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport FirebaseContext from './context/firebase';\nimport { firebase, FieldValue } from './lib/firebase';\n\nimport './styles/app.css';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={{ firebase, FieldValue }}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}